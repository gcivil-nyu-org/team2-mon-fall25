# .travis.yml for CollabDesk (Frontend + Backend unified CI/CD)
dist: jammy
os: linux
language: python
python:
  - "3.11"

# Run jobs in parallel (matrix build)
jobs:
  include:
    # ===== Backend build, test and deploy job =====
    - stage: Backend build, tests & Deploy
      name: "Backend: Django + Python 3.11"
      before_install:
        - cd backend/collabdesk        
        - python -m pip install --upgrade pip setuptools wheel
      install:
        - pip install -r requirements.txt
        - pip install black flake8 coverage coveralls PyYAML
      script:
        # Formatting and lint checks
        - black --check .
        - flake8 .
        # Run tests with coverage
        - coverage run manage.py test --keepdb
        - coverage report
      after_success:
        - coveralls
      deploy:
        - provider: elasticbeanstalk
          region: "us-east-1"
          app: "collabdesk-backend-dev"
          env: "collabdesk-backend-dev"
          bucket_name: "collabdesk-backend-dev"
          # bucket_path: "collabdesk-frontend-dev"
          on:
            branch: develop
          access_key_id: $AWS_ACCESS_KEY_ID
          secret_access_key: $AWS_SECRET_ACCESS_KEY

        - provider: elasticbeanstalk
          region: "us-east-1"
          app: "collabdesk-backend"
          env: "collabdesk-backend-prod"
          bucket_name: "collabdesk-backend-prod"
          # bucket_path: "collabdesk-frontend-prod"
          on:
            branch: main
          access_key_id: $AWS_ACCESS_KEY_ID
          secret_access_key: $AWS_SECRET_ACCESS_KEY

    # ===== Frontend build, test and deploy job (dev) =====
    - stage: Frontend build, test and deploy (dev)
      if: branch = develop
      addons:
        apt:
          packages:
            - awscli
      name: "Frontend: Build and Deploy to Dev"
      language: node_js
      node_js:
        - "20"
      cache:
        directories:
          - frontend/node_modules
      env:
        - ENV_FILE=frontend/.env.development
        - S3_BUCKET=collabdesk-frontend-dev
        - CF_DIST_ID=E1Q11CVWLLP2KA
      before_install:
        - cd frontend
        - npm install -g corepack
        - corepack enable
        - corepack prepare pnpm@10 --activate
      install:
        - pnpm install --frozen-lockfile
      script:
        - pnpm run lint || echo "No lint script found"
        - pnpm run test
        - echo "Using $ENV_FILE for build"
        - npm run build:dev
      after_success:
        - |
          if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
            echo "Deploying to S3 and CloudFront"
            aws s3 sync ./dist s3://$S3_BUCKET --delete --quiet
            aws cloudfront create-invalidation --distribution-id $CF_DIST_ID --paths "/*"
            echo "Frontend Dev build & deploy completed successfully"
          else
            echo "Skipping deploy for pull request build"
          fi

    # ===== Frontend build, test and deploy job (prod) =====
    - stage: Frontend build, test and deploy (prod)
      if: branch = main
      addons:
        apt:
          packages:
            - awscli
      name: "Frontend: Build and Deploy to Prod"
      language: node_js
      node_js:
        - "20"
      cache:
        directories:
          - frontend/node_modules
      env:
        - ENV_FILE=frontend/.env.production
        - S3_BUCKET=collabdesk-frontend-prod
        - CF_DIST_ID=E2MB4YPO4KNA31
      before_install:
        - cd frontend
        - npm install -g corepack
        - corepack enable
        - corepack prepare pnpm@10 --activate
      install:
        - pnpm install --frozen-lockfile
      script:
        - pnpm run lint || echo "No lint script found"
        - pnpm run test
        - echo "Using $ENV_FILE for build"
        - npm run build
      after_success:
        - |
          if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
            echo "Deploying to S3 and CloudFront"
            aws s3 sync ./dist s3://$S3_BUCKET --delete --quiet
            aws cloudfront create-invalidation --distribution-id $CF_DIST_ID --paths "/*"
            echo "Frontend Prod build & deploy completed successfully"
          else
            echo "Skipping deploy for pull request build"
          fi


# # Notifications
# notifications:
#   email:
#     recipients:
#       - sr7731@nyu.edu
#     on_success: always
#     on_failure: always
